version: '3.8'

services:
  master:
    # 도커 이미지를 빌드하는 방법을 지정
    build:
      # 현재 디렉토리를 빌드 컨텍스트로 사용
      context: ./
      # master 디렉토리에 위치한 Dockerfile을 사용하여 도커 이미지를 빌드
      dockerfile: master/Dockerfile
    # 컨테이너가 비정상적으로 종료되었을 때 자동으로 재시작
    restart: always
    # 컨테이너 내에서 사용할 환경 변수를 설정
    environment:
      # MySQL 데이터베이스의 이름을 db로 설정
      MYSQL_DATABASE: shoppingmall
      # MySQL에서 사용될 사용자 이름을 설정
      MYSQL_USER: user
      # MySQL에서 사용될 사용자의 비빌번호를 설정
      MYSQL_PASSWORD: 1q2w3e4r
      # MySQL 루트 사용자의 비밀번호를 설정
      MYSQL_ROOT_PASSWORD: 1q2w3e4r
    # 호스트와 컨테이너 간의 포트 매핑을 정의한다 -> 호스트의 3306 포트와 컨테이너의 3306 포트를 연결
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - 3306:3306
    # 컨테이너 이름을 정의
    container_name: db-master
    # 데이터를 영속적으로 저장할 볼륨을 정의 -> 볼륨은 컨테이너가 시작될 때 생성되고 컨테이너가 종료되어도 데이터가 유지된다.
    volumes:
      - my-db-master:/var/lib/mysql
      - my-db-master:/var/lib/mysql-files
    # 서비스가 연결될 네트워크를 지정
    networks:
      - mynet

  slave:
    build:
      context: ./
      dockerfile: slave/Dockerfile
    restart: always
    environment:
      MYSQL_DATABASE: shoppingmall
      MYSQL_USER: user
      MYSQL_PASSWORD: 1q2w3e4r
      MYSQL_ROOT_PASSWORD: 1q2w3e4r
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - 3307:3306
    container_name: db-slave
    # Where our data will be persisted
    volumes:
      - my-db-slave:/var/lib/mysql
      - my-db-slave:/var/lib/mysql-files
    networks:
      - mynet

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    restart: always
    networks:
      - mynet

  cache:
    container_name: redis-cache
    image: redis
    ports:
      - 6480:6379
    restart: always
    networks:
      - mynet

  backend:
    container_name: backend
    image: zvyg1023/shopping-mall
    expose:
      - 8080
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - master
      - slave
      - redis
      - cache
    networks:
      - mynet


# 컨테이너에서 사용할 볼륨의 이름을 정의한다.
volumes:
  my-db-master:
  my-db-slave:

networks:
  mynet:
    driver: bridge
